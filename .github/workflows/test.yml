---
name: test

"on":
  push:
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3.5.1
        with:
          node-version-file: "package.json"
          cache: "npm"

      - name: lookup node_modules cache
        id: restore_nodemodules_cache
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: node_modules_${{ hashFiles('package.json') }}_${{ hashFiles('package-lock.json') }} # must be the same as in "Cache node_modules"
          lookup-only: true

      - if: steps.restore_nodemodules_cache.outputs.cache-hit != true
        name: Install dependencies
        run: |
          npm ci
        
      - if: steps.restore_nodemodules_cache.outputs.cache-hit != 'true'
        name: Cache node_modules
        uses: actions/cache/save@v3
        with:
          path: node_modules
          key: node_modules_${{ hashFiles('package.json') }}_${{ hashFiles('package-lock.json') }} # we also cache packge.json, because we might have changed some install scripts

  build:
    needs: [install]
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v3.5.1
          with:
            node-version-file: "package.json"
            cache: "npm"
        - uses: actions/cache/restore@v3
          with:
            path: node_modules
            key: node_modules_${{ hashFiles('package.json') }}_${{ hashFiles('package-lock.json') }} # must be the same as in "Cache node_modules"
            fail-on-cache-miss: true
        - run: npx nx build example-app-one
